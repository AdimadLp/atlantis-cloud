# IoT Services - Irrigation System
# Separate docker-compose file for IoT-related services
services:
  #--------------------------------------------------------------------------
  # IOT Network Services
  #--------------------------------------------------------------------------
  iot_api:
    image: ${IOT_API_IMAGE_NAME}:${IOT_API_IMAGE_TAG}
    container_name: iot_api_service
    # Internal port 8000 (target for cloudflared: iot.atlantis-cloud.com/api)
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@iot_db:5432/${POSTGRES_DB}
    volumes:
      # Add any volumes your API might need, e.g., for uploads or logs
      # - ./api_data:/app/data
    networks:
      - iot_network
    depends_on:
      - iot_db
    # Healthcheck for API
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  iot_db:
    image: postgres:${POSTGRES_VERSION:-15}
    container_name: iot_database
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - iot_db_data:/var/lib/postgresql/data
    networks:
      - iot_network
    # Healthcheck for PostgreSQL
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  iot_dashboard:
    image: ${DASHBOARD_IMAGE_NAME}:${DASHBOARD_IMAGE_TAG}
    container_name: iot_dashboard
    # Internal port 3001 (target for cloudflared: iot.atlantis-cloud.com/dashboard)
    restart: unless-stopped
    environment:
      - API_BASE_URL=/api
    networks:
      - iot_network
    depends_on:
      - iot_api
    # Healthcheck for Dashboard
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

#--------------------------------------------------------------------------
# Volumes - for persistent data
#--------------------------------------------------------------------------
volumes:
  iot_db_data:

#--------------------------------------------------------------------------
# Networks - for service isolation
#--------------------------------------------------------------------------
networks:
  iot_network:
    driver: bridge
    name: iot_network
