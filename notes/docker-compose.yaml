# Notes Services - Affine
# Separate docker-compose file for note-taking services
name: affine
services:
  #--------------------------------------------------------------------------
  # Affine Main Service
  #--------------------------------------------------------------------------
  affine:
    image: ghcr.io/toeverything/affine-graphql:${AFFINE_REVISION:-stable}
    container_name: affine
    # Internal port 3010 (target for cloudflared: notes.atlantis-cloud.com)
    ports:
      - "3010:3010"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      affine_migration:
        condition: service_completed_successfully
    volumes:
      # custom configurations
      - ${UPLOAD_LOCATION}:/root/.affine/storage
      - ${CONFIG_LOCATION}:/root/.affine/config
    environment:
      - REDIS_SERVER_HOST=redis
      - DATABASE_URL=postgresql://${DB_USERNAME}:${DB_PASSWORD}@postgres:5432/${DB_DATABASE}
      - AFFINE_INDEXER_ENABLED=false
    networks:
      - notes_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3010 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  #--------------------------------------------------------------------------
  # Affine Migration Service
  #--------------------------------------------------------------------------
  affine_migration:
    image: ghcr.io/toeverything/affine-graphql:${AFFINE_REVISION:-stable}
    container_name: affine_migration
    volumes:
      # custom configurations
      - ${UPLOAD_LOCATION}:/root/.affine/storage
      - ${CONFIG_LOCATION}:/root/.affine/config
    command: ["sh", "-c", "node ./scripts/self-host-predeploy.js"]
    environment:
      - REDIS_SERVER_HOST=redis
      - DATABASE_URL=postgresql://${DB_USERNAME}:${DB_PASSWORD}@postgres:5432/${DB_DATABASE}
      - AFFINE_INDEXER_ENABLED=false
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - notes_network
    restart: "no"

  #--------------------------------------------------------------------------
  # Redis Cache Service
  #--------------------------------------------------------------------------
  redis:
    image: redis
    container_name: affine_redis
    networks:
      - notes_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  #--------------------------------------------------------------------------
  # PostgreSQL Database Service
  #--------------------------------------------------------------------------
  postgres:
    image: pgvector/pgvector:pg16
    container_name: affine_postgres
    volumes:
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_INITDB_ARGS: "--data-checksums"
    networks:
      - notes_network
    healthcheck:
      test:
        ["CMD", "pg_isready", "-U", "${DB_USERNAME}", "-d", "${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

#--------------------------------------------------------------------------
# Networks - for service isolation
#--------------------------------------------------------------------------
networks:
  notes_network:
    driver: bridge
    name: notes_network
